/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2014 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_TESSELLATOR_H
#define OSGEARTH_TESSELLATOR_H 1

#include <osgEarth/Common>

#include <osg/Geometry>
    
namespace osgEarth {

    /**
     * Polygon tessellator using a modified ear clipping technique
     */
    class OSGEARTH_EXPORT Tessellator
    {
    public:
        bool tessellateGeometry(osg::Geometry &geom);

    protected:
        osg::PrimitiveSet* tessellatePrimitive(osg::PrimitiveSet* primitive, osg::Vec3Array* vertices);
        osg::PrimitiveSet* tessellatePrimitive(unsigned int first, unsigned int last, osg::Vec3Array* vertices);

        bool isConvex(const osg::Vec3Array &vertices, const std::vector<unsigned int> &activeVerts, unsigned int cursor);
        bool isEar(const osg::Vec3Array &vertices, const std::vector<unsigned int> &activeVerts, unsigned int cursor, bool &tradEar);
    };
} // namespace osgEarth

#endif // OSGEARTH_TESSELLATOR_H
